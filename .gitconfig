[core]
  # Excludesfiles allows us to set a global list of things to ignore
  excludesfile = ~/.gitignore_global

# These are custom color options for the console
[color]
  status = auto
  diff = auto

[push]
  default = simple

[rebase]
  autosquash = true

[color "status"]
  untracked = white
  changed = cyan
  added = yellow

[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  required = true

[init]
  defaultBranch = main

# Aliases are command shortcuts
[alias]
  co = checkout

  # lg is now a shortcut for a pretty log with short commit messages
  # See the log manpage: https://www.kernel.org/pub/software/scm/git/docs/git-log.html
  # for explanations of what these options do
  ll = log \
    --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' \
    --abbrev-commit \
    --date=relative

  a = add
  b = branch
  c = checkout
  d = diff
  f = fetch --prune
  k = cherry-pick
  l = log --pretty=\"%C(auto) %h %s\"
  n = commit --verbose --amend
  r = remote
  s = commit --dry-run --short
  t = diff --cached

  # git add and the staging area
  a = add
  aa = add --update          # mnemonic: "add all"
  stage = add
  ap = add --patch
  p = diff --cached          # mnemonic: "patch"
  unstage = reset HEAD

  # commits and history
  ci = commit --verbose --no-verify
  ca = commit --verbose --all --no-verify
  amend = commit --verbose --amend --no-verify
  n = commit --verbose --amend --no-verify
  k = cherry-pick
  re = rebase --interactive
  pop = reset --soft HEAD^
  peek = log -p --max-count=1

  # git fetch
  f = fetch
  pm = pull          # mnemonic: pull merge
  pr = pull --rebase # mnemonic: pull rebase

  # git diff
  d = diff
  ds = diff --stat    # mnemonic: "diff stat"

  # git reset
  hard = reset --hard
  soft = reset --soft

  # custom
  scrap     = !git checkout . && git clean -df
  switch    = !git remote remove origin && git remote add origin
  cleanup   = !git branch | grep -v -e master | grep -v -e main | xargs git branch -d
  prune-all = fetch --prune --all
  catchup   = pull --ff-only
  wip       = !git add . && git commit -m "WIP" --no-verify
  current   = rev-parse --abbrev-ref HEAD
  publish   = "!git push -u origin `git current`"
  tap       = add -p # for typo protection
  force     = push --force-with-lease
  list-untracked = "!git ls-files -v | grep ^[sS] | cut -c '3-'"
  untrack =  update-index --skip-worktree
  retrack =  update-index --no-skip-worktree
  retrack-all = "!git update-index --no-skip-worktree $(git list-untracked | tr '\n' ' ')"
  fixup = commit --fixup --no-verify
  squash = commit --squash --no-verify
  alias = "!git config --list | grep alias"
  anp = !git add -N . && git add -p
  save = commit --amend -CHEAD --no-verify
  words = diff --word-diff
  stash-save = stash save
  stash-show = "!f() { git stash show stash^{/$*} -p; }; f"
  stash-apply = "!f() { git stash apply stash^{/$*}; }; f"
  diff-grep = "!f() { git log -S "$*" -p; }; f"


[credential]
  helper = osxkeychain
